{
  "project": {
    "name": "Chatlings",
    "tagline": "A safe, friendly place where kids chat, learn, and have fun!",
    "description": "A secure real-time chat application designed specifically for children aged 8-14, featuring AI-powered content moderation, group chats, and educational features.",
    "architecture": "Serverless",
    "tech_stack": {
      "frontend": {
        "framework": "React + Vite",
        "language": "JavaScript (JSX)",
        "styling": "CSS Modules",
        "state_management": "Zustand",
        "routing": "React Router",
        "authentication": "React OIDC Context (AWS Cognito)",
        "websockets": "WebSocket API with custom hooks"
      },
      "backend": {
        "platform": "AWS Serverless",
        "runtime": "Node.js",
        "api_gateway": "WebSocket API",
        "authentication": "AWS Cognito",
        "database": "DynamoDB",
        "storage": "S3",
        "compute": "AWS Lambda"
      }
    },
    "key_features": {
      "real_time_chat": {
        "description": "WebSocket-based real-time messaging",
        "group_chats": true,
        "message_types": ["text", "images"],
        "emoji_support": true
      },
      "safety_features": {
        "ai_moderation": "Content moderation using AI models",
        "secure_authentication": "AWS Cognito with OIDC",
        "age_appropriate": "Designed for ages 8-14",
        "privacy_focused": "Built with privacy & security at heart"
      },
      "file_sharing": {
        "image_uploads": "PNG file uploads to S3",
        "presigned_urls": "Secure S3 upload with presigned URLs",
        "metadata_tracking": "Files tagged with user and group info",
        "moderation_pipeline": "Files moderated before appearing in chat"
      },
      "group_management": {
        "create_groups": "Users can create chat groups",
        "join_groups": "Join existing groups with group codes",
        "custom_icons": "Groups have custom emoji icons",
        "member_management": "Track group membership"
      },
      "ui_features": {
        "responsive_design": "Mobile-first responsive design",
        "modern_ui": "Beautiful, kid-friendly interface",
        "animations": "Smooth transitions and animations",
        "color_scheme": "Bright, playful colors (yellows, blues, pinks)"
      }
    },
    "database_schema": {
      "table_name": "Chatlings",
      "design": "Single Table Design with composite keys",
      "entities": {
        "user_profile": {
          "pk": "USER#<userId>",
          "sk": "PROFILE",
          "attributes": ["name", "avatarUrl", "joinedAt", "connectionId"]
        },
        "group_metadata": {
          "pk": "GROUP#<groupId>",
          "sk": "META",
          "attributes": ["groupName", "groupCode", "createdBy", "createdAt", "groupIcon"]
        },
        "group_message": {
          "pk": "GROUP#<groupId>",
          "sk": "MSG#<ISO timestamp>",
          "attributes": ["sentBy", "text", "type", "imageUrl"]
        },
        "group_member_forward": {
          "pk": "USER#<userId>",
          "sk": "MEMBER#<groupId>",
          "attributes": ["joinedAt"]
        },
        "group_member_reverse": {
          "pk": "GROUP#<groupId>",
          "sk": "MEMBER#<userId>",
          "attributes": ["joinedAt"]
        }
      }
    },
    "lambda_functions": {
      "authorizer": {
        "purpose": "JWT token validation for WebSocket connections",
        "path": "Lambda/Authorizer/"
      },
      "connect": {
        "purpose": "Handle WebSocket connection events",
        "path": "Lambda/Connect/"
      },
      "disconnect": {
        "purpose": "Handle WebSocket disconnection events",
        "path": "Lambda/Disconnect/"
      },
      "default": {
        "purpose": "Default WebSocket route handler",
        "path": "Lambda/Default/"
      },
      "create_group": {
        "purpose": "Create new chat groups",
        "path": "Lambda/CreateGroup/",
        "features": ["Group validation", "Member addition", "DynamoDB transactions"]
      },
      "join_group": {
        "purpose": "Join existing groups with group codes",
        "path": "Lambda/JoinGroup/"
      },
      "send_message": {
        "purpose": "Send messages to groups",
        "path": "Lambda/SendMessage/",
        "features": ["Member validation", "Message storage"]
      },
      "list_groups": {
        "purpose": "List groups for a user",
        "path": "Lambda/ListGroupsForUser/"
      },
      "fetch_chat_history": {
        "purpose": "Retrieve chat history for groups",
        "path": "Lambda/FetchGroupChatHistory/"
      },
      "generate_presigned_url": {
        "purpose": "Generate S3 presigned URLs for file uploads",
        "path": "Lambda/GenerateS3PreSignedURL/",
        "features": ["Member validation", "Metadata inclusion", "PNG-only uploads"]
      },
      "message_analyzer": {
        "purpose": "AI-powered content moderation",
        "path": "Lambda/MessageAnalyzer/"
      }
    },
    "file_upload_workflow": {
      "step1": "User selects PNG file via attachment button",
      "step2": "Generate unique filename with timestamp and random string",
      "step3": "Request presigned URL from Lambda with group and user metadata",
      "step4": "Upload file directly to S3 with metadata headers",
      "step5": "File triggers moderation Lambda (planned)",
      "step6": "Approved files appear in chat",
      "metadata_included": ["group", "username", "original-filename", "upload-timestamp"]
    },
    "frontend_structure": {
      "pages": {
        "landing_page": "Marketing/welcome page",
        "auth": "Authentication handling",
        "home": "Main chat interface",
        "app": "Protected route wrapper"
      },
      "components": {
        "header": "Navigation and connection status",
        "groups": "Group list and management",
        "chat_messages": "Message display",
        "message_input": "Text input and file upload",
        "create_group_modal": "Group creation form"
      },
      "stores": {
        "group_chat_store": "Group and message state management",
        "websocket_store": "WebSocket connection management"
      },
      "hooks": {
        "useSimpleWebSocket": "WebSocket connection and messaging"
      }
    },
    "security_features": {
      "authentication": "AWS Cognito with OIDC",
      "authorization": "JWT token validation",
      "cors": "Configured for localhost:5173",
      "input_validation": "Server-side validation for all inputs",
      "member_validation": "Users must be group members to send messages",
      "file_restrictions": "Only PNG files allowed for uploads",
      "ai_moderation": "Content moderation pipeline for safety"
    },
    "deployment": {
      "frontend": {
        "dev_server": "Vite dev server on localhost:5173",
        "build_tool": "Vite",
        "deployment_ready": true
      },
      "backend": {
        "platform": "AWS Lambda + API Gateway",
        "websocket_endpoint": "WebSocket API Gateway",
        "environment_variables": ["bucketName", "tableName"],
        "s3_bucket": "springapp-severless-360"
      }
    },
    "development_status": {
      "core_features": "Complete",
      "file_upload": "Complete",
      "ai_moderation": "Backend ready, integration pending",
      "video_calls": "Placeholder implemented",
      "responsive_design": "Complete",
      "authentication": "Complete"
    },
    "target_audience": {
      "age_range": "8-14 years old",
      "use_cases": [
        "Safe social chatting",
        "Study groups and collaboration",
        "Creative expression through image sharing",
        "Learning communication skills"
      ]
    },
    "unique_value_propositions": [
      "Child-safe environment with AI moderation",
      "Educational focus with study group features",
      "Modern, intuitive interface designed for kids",
      "Real-time communication with safety guardrails",
      "Privacy-first architecture"
    ]
  }
}
